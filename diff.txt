diff --git a/ArquiProjecto/Phase3/theproject.v b/ArquiProjecto/Phase3/theproject.v
index c230369..f5837a3 100644
--- a/ArquiProjecto/Phase3/theproject.v
+++ b/ArquiProjecto/Phase3/theproject.v
@@ -595,7 +595,7 @@ module condEval(output reg out, input [31:0] IR, input [31:0] str);
 				 else out = 0; end
 		4'b1100: begin if (str[30] == 0 && str[31] == str[28]) out = 1;	// Z=0 & N=V
 				 else out = 0; end
-		4'b1101: begin if (str[30] == 1 || str[31] != str[28]) out = 1;	//Z=1 or N=!Z
+		4'b1101: begin if (str[30] == 1 || (str[31] != str[28])) out = 1;	//Z=1 or N=!Z
 				 else out = 0; end
 		4'b1110: out = 1;
 		4'b1111: out = 0;
@@ -1088,7 +1088,7 @@ module ROM (output reg [52:0] out, input [6:0] state, input clk);
 		mem[92][52:0] = 53'b01___010_1___0000001_1___0___ZZZZ_X__ZZZZ_XX_____ZZZZ_XX_____000___1101__1___1__1__1__1__1__1__0___00_____00__1___0;
 		
 		//b&L
-		mem[93][52:0] = 53'b00___011_1___1011110_1___0___0000_0__1111_00_____1111_00_____001___1101__1___0__0__0__0__0__0__0___00_____00__1___0;
+		mem[93][52:0] = 53'b00___011_1___1011110_1___0___0000_0__1111_00_____1110_00_____001___1101__1___0__0__0__0__0__0__0___00_____00__1___0;
 		//b
 		mem[94][52:0] = 53'b00___010_1___1011100_1___0___1111_0__0000_00_____1111_00_____011___0100__1___0__1__0__0__0__0__0___00_____00__1___0;
 
@@ -1121,8 +1121,8 @@ module ControlUnit (output reg [39:0] out, input clk, mfc, input [31:0] IR, stat
 	
 	// always @(posedge clk)
 	// 	out = innerOut[39:0];
-	/*always @ (state)
-	 	$display("Next State %d",state);*/
+	always @ (state)
+	 	$display("Next State %d",state);
 	always @(innerOut)
 		out = innerOut[39:0];
 endmodule
@@ -1228,24 +1228,24 @@ module datapath;
 	initial forever #2 CLK = ~CLK; // Change Clock Every Time Unit
 	
 	initial begin
-		 /*$display ("CLK PC RA RB RC"); //imprime header
+		 $display ("CLK PC RA RB RC"); //imprime header
 		 $monitor ("%d",PC);
-		 $monitor ("CLK %d PC %d RA %d RB %d RC %d MARTORAM %0d MFC %d MEMDATA %b IR %b \nCUSIGNALS %b ENABLERAM %b READ/WRITERAM %b MUX8SEL %b \n ALULEFT %d ALURIGHT %dALUSELECT %b MAS %b \n R15CONTENT %d R15CLR %d REGEN %d\nR0 %d R1 %d R2 %d R3 %d R4 %d R5 %d R6 %d R7 %d R8 %d R9 %d R10 %d R11 %d R12 %d\n SHIFTER_OUT %d SEROUT %d TSROUT %0b CONDOUT %b\n",
+		 $monitor ("CLK %d PC %d RA %d RB %d RC %d MARTORAM %0d MFC %d MEMDATA %b IR %b \nCUSIGNALS %b ENABLERAM %b READ/WRITERAM %b MUX8SEL %b \n ALULEFT %d ALURIGHT %dALUSELECT %b MAS %b \n R15CONTENT %d R15CLR %d REGEN %d\nR0 %d R1 %d R2 %d R3 %d R4 %d R5 %d R6 %d R7 %d R8 %d R9 %d R10 %d R11 %d R12 %d R14 %d\n SHIFTER_OUT %d SEROUT %d TSROUT %0b CONDOUT %b\n",
 		 	CLK, PC, RA, RB, RC, mar_to_ram, 
 		 MFC,mem_data,ir_out,cuSignals,cuSignals[0], cuSignals[1], cuSignals[20:18],LEFT_OP,
 		 alu_in_sel_mux_to_alu,cuSignals[17:14], MAS,registerFile.R15.Q,registerFile.R15.CLR, 
 		 cuSignals[38],registerFile.R0.Q,registerFile.R1.Q,registerFile.R2.Q,registerFile.R3.Q,registerFile.R4.Q,
-		 registerFile.R5.Q,registerFile.R6.Q,registerFile.R7.Q,registerFile.R8.Q,registerFile.R9.Q,registerFile.R10.Q,registerFile.R11.Q,registerFile.R12.Q,shifter_output, ser_out, TSROUT, cu.condOut); //imprime las señales
-		*/
-		$monitor("Memory Access: %b (%0d)",mar_to_ram,mar_to_ram);
+		 registerFile.R5.Q,registerFile.R6.Q,registerFile.R7.Q,registerFile.R8.Q,registerFile.R9.Q,registerFile.R10.Q,registerFile.R11.Q,registerFile.R12.Q,registerFile.R14.Q,,shifter_output, ser_out, TSROUT, cu.condOut); //imprime las señales
+		
+		// $monitor("Memory Access: %b (%0d)",mar_to_ram,mar_to_ram);
 	end
 	reg [12:0] i;
 
 	initial #sim_time begin 
-		$display("Printing Memory:");
-		for (i = 0; i < 512; i = i +1) begin
-  			$display ("Memory location %d content: %b", i, ram.mem[i]);
-   		end
+		// $display("Printing Memory:");
+		// for (i = 0; i < 512; i = i +1) begin
+  // 			$display ("Memory location %d content: %b", i, ram.mem[i]);
+  //  		end
 	end
 
 	initial #sim_time $finish;
